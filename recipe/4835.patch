From 76ae1c048ac03311bef7207ad285611cda642b1e Mon Sep 17 00:00:00 2001
From: Axel Huebl <axel.huebl@plasma.ninja>
Date: Mon, 8 Apr 2024 09:21:31 -0700
Subject: [PATCH] `lockAdd` w/ explicit Templates

---
 Source/Particles/WarpXParticleContainer.cpp | 8 ++++----
 Source/ablastr/particles/DepositCharge.H    | 2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/Source/Particles/WarpXParticleContainer.cpp b/Source/Particles/WarpXParticleContainer.cpp
index fd1bc7917a..0dd67b661a 100644
--- a/Source/Particles/WarpXParticleContainer.cpp
+++ b/Source/Particles/WarpXParticleContainer.cpp
@@ -794,9 +794,9 @@ WarpXParticleContainer::DepositCurrent (WarpXParIter& pti,
 #ifndef AMREX_USE_GPU
     // CPU, tiling: atomicAdd local_j<xyz> into j<xyz>
     WARPX_PROFILE_VAR_START(blp_accumulate);
-    (*jx)[pti].lockAdd(local_jx[thread_num], tbx, tbx, 0, 0, jx->nComp());
-    (*jy)[pti].lockAdd(local_jy[thread_num], tby, tby, 0, 0, jy->nComp());
-    (*jz)[pti].lockAdd(local_jz[thread_num], tbz, tbz, 0, 0, jz->nComp());
+    (*jx)[pti].template lockAdd<amrex::RunOn::Host>(local_jx[thread_num], tbx, tbx, 0, 0, jx->nComp());
+    (*jy)[pti].template lockAdd<amrex::RunOn::Host>(local_jy[thread_num], tby, tby, 0, 0, jy->nComp());
+    (*jz)[pti].template lockAdd<amrex::RunOn::Host>(local_jz[thread_num], tbz, tbz, 0, 0, jz->nComp());
     WARPX_PROFILE_VAR_STOP(blp_accumulate);
 #endif
 }
@@ -1092,7 +1092,7 @@ WarpXParticleContainer::DepositCharge (WarpXParIter& pti, RealVector const& wp,
 #ifndef AMREX_USE_GPU
         // CPU, tiling: atomicAdd local_rho into rho
         WARPX_PROFILE_VAR_START(blp_accumulate);
-        (*rho)[pti].lockAdd(local_rho[thread_num], tb, tb, 0, icomp*nc, nc);
+        (*rho)[pti].template lockAdd<amrex::RunOn::Host>(local_rho[thread_num], tb, tb, 0, icomp*nc, nc);
         WARPX_PROFILE_VAR_STOP(blp_accumulate);
 #endif
     } else {
diff --git a/Source/ablastr/particles/DepositCharge.H b/Source/ablastr/particles/DepositCharge.H
index b2dedccd03..f0e158f1ab 100644
--- a/Source/ablastr/particles/DepositCharge.H
+++ b/Source/ablastr/particles/DepositCharge.H
@@ -197,7 +197,7 @@ deposit_charge (typename T_PC::ParIterType& pti,
 #ifndef AMREX_USE_GPU
     // CPU, tiling: atomicAdd local_rho into rho
     ABLASTR_PROFILE_VAR_START(blp_accumulate, do_device_synchronize);
-    (*rho)[pti].lockAdd(local_rho, tb, tb, 0, icomp*nc, nc);
+    (*rho)[pti].template lockAdd<amrex::RunOn::Host>(local_rho, tb, tb, 0, icomp*nc, nc);
     ABLASTR_PROFILE_VAR_STOP(blp_accumulate, do_device_synchronize);
 #endif
 }
